app MySchoolStory {
  wasp: {
    version: "^0.13.0"
  },
  title: "MySchoolStory",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id          Int          @id @default(autoincrement())
    experiences Experience[]
    comments    Comment[]
    likes       Like[]
psl=}

entity Experience {=psl
    id       Int       @id @default(autoincrement())
    story    String
    comments Comment[]
    likes    Like[]
    user     User      @relation(fields: [userId], references: [id])
    userId   Int
psl=}

entity Comment {=psl
    id           Int        @id @default(autoincrement())
    text         String
    user         User       @relation(fields: [userId], references: [id])
    userId       Int
    experience   Experience @relation(fields: [experienceId], references: [id])
    experienceId Int
psl=}

entity Like {=psl
    id           Int        @id @default(autoincrement())
    user         User       @relation(fields: [userId], references: [id])
    userId       Int
    experience   Experience @relation(fields: [experienceId], references: [id])
    experienceId Int
psl=}

action createExperience {
  fn: import { createExperience } from "@src/actions.js",
  entities: [Experience]
}

action createComment {
  fn: import { createComment } from "@src/actions.js",
  entities: [Comment, Experience]
}

action likeExperience {
  fn: import { likeExperience } from "@src/actions.js",
  entities: [Like, Experience]
}

query getExperience {
  fn: import { getExperience } from "@src/queries.js",
  entities: [Experience, Comment, Like]
}

query getUserExperiences {
  fn: import { getUserExperiences } from "@src/queries.js",
  entities: [User, Experience, Comment, Like]
}

route ExperienceRoute { path: "/experience/:experienceId", to: ExperiencePage }
page ExperiencePage {
  component: import ExperiencePage from "@src/pages/Experience.jsx",
  authRequired: true
}

route UserExperiencesRoute { path: "/user/:userId/experiences", to: UserExperiencesPage }
page UserExperiencesPage {
  component: import UserExperiencesPage from "@src/pages/UserExperiences.jsx",
  authRequired: true
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}